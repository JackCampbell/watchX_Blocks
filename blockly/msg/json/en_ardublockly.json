{
	"@metadata": {
		"author": "carlosperate",
		"lastupdated": "2021-06-23 13:40:36.083440",
		"locale": "en",
		"messagedocumentation" : "qqq_ardublockly"
	},
	"ARD_TYPE_CHAR": "Character",
	"ARD_TYPE_TEXT": "Text",
	"ARD_TYPE_BOOL": "Boolean",
	"ARD_TYPE_SHORT": "Short Number",
	"ARD_TYPE_NUMBER": "Number",
	"ARD_TYPE_LONG": "Large Number",
	"ARD_TYPE_DECIMAL": "Decimal",
	"ARD_TYPE_ARRAY": "Array",
	"ARD_TYPE_NULL": "Null",
	"ARD_TYPE_UNDEF": "Undefined",
	"ARD_TYPE_CHILDBLOCKMISSING": "ChildBlockMissing",
	"ARD_HIGH": "HIGH",
	"ARD_LOW": "LOW",
	"ARD_ANALOGREAD": "read analog pin#",
	"ARD_ANALOGREAD_TIP": "Return value between 0 and 1024",
	"ARD_ANALOGWRITE": "set analog pin#",
	"ARD_ANALOGWRITE_TIP": "Write analog value between 0 and 255 to a specific PWM Port",
	"ARD_HIGHLOW_TIP": "Set a pin state logic High or Low.",
	"ARD_DIGITALREAD": "read digital pin#",
	"ARD_DIGITALREAD_TIP": "Read digital value on a pin: HIGH or LOW",
	"ARD_DIGITALWRITE": "set digitial pin#",
	"ARD_WRITE_TO": "to",
	"ARD_DIGITALWRITE_TIP": "Write digital value HIGH or LOW to a specific Port",
	"ARD_BUILTIN_LED": "set built-in LED",
	"ARD_BUILTIN_LED_TIP": "Light on or off for the built-in LED of the Arduino",
	"ARD_DEFINE": "Define",
	"ARD_TONE_PIN": "Tone PIN#",
	"ARD_TONE_FREQ": "frequency",
	"ARD_TONE_PIN_TIP": "Generate audio tones on a pin",
	"ARD_NOTONE_PIN": "No tone PIN#",
	"ARD_NOTONE_PIN_TIP": "Stop generating a tone on a pin",
	"ARD_MAP": "Map",
	"ARD_MAP_VAL": "value to [0-",
	"ARD_MAP_TIP": "Re-maps a number from [0-1024] to another.",
	"ARD_FUN_RUN_SETUP": "Arduino run first:",
	"ARD_FUN_RUN_LOOP": "Arduino loop forever:",
	"ARD_FUN_RUN_TIP": "Defines the Arduino setup() and loop() functions.",
	"ARD_PIN_WARN1": "Pin %1 is needed for %2 as pin %3. Already used as %4.",
	"ARD_SERIAL_SETUP": "Setup",
	"ARD_SERIAL_SPEED": ":  speed to",
	"ARD_SERIAL_BPS": "bps",
	"ARD_SERIAL_SETUP_TIP": "Selects the speed for a specific Serial peripheral",
	"ARD_SERIAL_PRINT": "print",
	"ARD_SERIAL_PRINT_NEWLINE": "add new line",
	"ARD_SERIAL_PRINT_TIP": "Prints data to the console/serial port as human-readable ASCII text.",
	"ARD_SERIAL_PRINT_WARN": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SERVO_WRITE": "set SERVO from Pin",
	"ARD_SERVO_WRITE_TO": "to",
	"ARD_SERVO_WRITE_DEG_180": "Degrees (0~180)",
	"ARD_SERVO_WRITE_TIP": "Set a Servo to an specified angle",
	"ARD_SERVO_READ": "read SERVO from PIN#",
	"ARD_SERVO_READ_TIP": "Read a Servo angle",
	"ARD_SPI_SETUP": "Setup",
	"ARD_SPI_SETUP_CONF": "configuration:",
	"ARD_SPI_SETUP_SHIFT": "data shift",
	"ARD_SPI_SETUP_MSBFIRST": "MSBFIRST",
	"ARD_SPI_SETUP_LSBFIRST": "LSBFIRST",
	"ARD_SPI_SETUP_DIVIDE": "clock divide",
	"ARD_SPI_SETUP_MODE": "SPI mode (idle - edge)",
	"ARD_SPI_SETUP_MODE0": "0 (Low - Falling)",
	"ARD_SPI_SETUP_MODE1": "1 (Low - Rising)",
	"ARD_SPI_SETUP_MODE2": "2 (High - Falling)",
	"ARD_SPI_SETUP_MODE3": "3 (High - Rising)",
	"ARD_SPI_SETUP_TIP": "Configures the SPI peripheral.",
	"ARD_SPI_TRANS_NONE": "none",
	"ARD_SPI_TRANS_VAL": "transfer",
	"ARD_SPI_TRANS_SLAVE": "to slave pin",
	"ARD_SPI_TRANS_TIP": "Send a SPI message to an specified slave device.",
	"ARD_SPI_TRANS_WARN1": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SPI_TRANS_WARN2": "Old pin value %1 is no longer available.",
	"ARD_SPI_TRANSRETURN_TIP": "Send a SPI message to an specified slave device and get data back.",
	"ARD_STEPPER_SETUP": "Setup stepper motor",
	"ARD_STEPPER_MOTOR": "stepper motor:",
	"ARD_STEPPER_DEFAULT_NAME": "MyStepper",
	"ARD_STEPPER_NUMBER_OF_PINS": "Number of pins",
	"ARD_STEPPER_TWO_PINS": "2",
	"ARD_STEPPER_FOUR_PINS": "4",
	"ARD_STEPPER_PIN1": "pin1#",
	"ARD_STEPPER_PIN2": "pin2#",
	"ARD_STEPPER_PIN3": "pin3#",
	"ARD_STEPPER_PIN4": "pin4#",
	"ARD_STEPPER_REVOLVS": "how many steps per revolution",
	"ARD_STEPPER_SPEED": "set speed (rpm) to",
	"ARD_STEPPER_SETUP_TIP": "Configures a stepper motor pinout and other settings.",
	"ARD_STEPPER_STEP": "move stepper",
	"ARD_STEPPER_STEPS": "steps",
	"ARD_STEPPER_STEP_TIP": "Turns the stepper motor a specific number of steps.",
	"ARD_STEPPER_COMPONENT": "stepper",
	"ARD_COMPONENT_WARN1": "A %1 configuration block with the same %2 name must be added to use this block!",
	"ARD_TIME_DELAY": "wait",
	"ARD_TIME_MS": "milliseconds",
	"ARD_TIME_DELAY_TIP": "Wait specific time in milliseconds",
	"ARD_TIME_DELAY_MICROS": "microseconds",
	"ARD_TIME_DELAY_MICRO_TIP": "Wait specific time in microseconds",
	"ARD_TIME_MILLIS": "current elapsed Time (milliseconds)",
	"ARD_TIME_MILLIS_TIP": "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_MICROS": "current elapsed Time (microseconds)",
	"ARD_TIME_MICROS_TIP": "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_INF": "wait forever (end program)",
	"ARD_TIME_INF_TIP": "Wait indefinitely, stopping the program.",
	"ARD_VAR_AS": "as",
	"ARD_VAR_AS_TIP": "Sets a value to a specific type",
	"ARD_PULSE_READ": "measure %1 pulse on pin #%2",
	"ARD_PULSE_READ_TIMEOUT": "measure %1 pulse on pin #%2 (timeout after %3 Î¼s)",
	"ARD_PULSE_TIP": "Measures the duration of a pulse on the selected pin.",
	"ARD_PULSETIMEOUT_TIP": "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.",
	"ARD_SETTONE": "Set tone on pin #",
	"ARD_TONEFREQ": "at frequency",
	"ARD_TONE_TIP": "Sets tone on pin to specified frequency within range 31 - 65535",
	"ARD_TONE_WARNING": "Frequency must be in range 31 - 65535",
	"ARD_NOTONE": "Turn off tone on pin #",
	"ARD_NOTONE_TIP": "Turns the tone off on the selected pin",
	"NEW_INSTANCE": "New instance...",
	"RENAME_INSTANCE": "Rename instance...",
	"NEW_INSTANCE_TITLE": "New instance name:",
	"RENAME_INSTANCE_TITLE": "Rename all '%1' instances to:",
	"WX_TURN_LED": "Turn LED",
	"WX_TO": "to",
	"WX_TURN_LED_TIPS": "",
	"WX_LED_BRIGHTNESS": "LED brightness",
	"WX_LED_BRIGHTNESS_TIP": "",
	"WX_LED_LEVEL": " level ",
	"WX_OLED_WRITE": "Display write",
	"WX_OLED_WRITE_LINE": "line",
	"WX_OLED_WRITE_ALIGN": "align",
	"WX_PX": "X",
	"WX_PY": "Y",
	"WX_OLED_WRITE_LINE_TIP": "",
	"WX_OLED_WRITE_POS_TIP": "",
	"WX_DRAW_PIXEL": "Draw pixel",
	"WX_DRAW_PIXEL_TIP": "",
	"WX_DRAW_LINE": "Draw line",
	"WX_DRAW_LINE_TIP": "",
	"WX_DRAW_BATTERY_LEVEL": "Draw battery level",
	"WX_DRAW_BATTERY_LEVEL_TIP": "",
	"WX_PERCENT": "percent",
	"WX_OLED_BRIGHTNESS": "Display brightness",
	"WX_OLED_BRIGHTNESS_TIP": "",
	"WX_DRAW_USB_ICON": "Display USB icon",
	"WX_DRAW_USB_ICON_TIP": "",
	"WX_DRAW_CHARGE_ICON": "Display charge icon",
	"WX_DRAW_CHARGE_ICON_TIP": "",
	"WX_OLED_CLEAR_ALL": "Display clear display",
	"WX_OLED_CLEAR_ALL_TIP": "",
	"WX_OLED_POWER": "Display power",
	"WX_OLED_POWER_TIP": "",
	"WX_SET_DATE": "Set date",
	"WX_DAY": "day",
	"WX_MONTH": "month",
	"WX_YEAR": "year",
	"WX_HOUR": "hour",
	"WX_MINUTE": "minute",
	"WX_SECOND": "second",
	"WX_SET_DATE_TIP": "",
	"WX_CURRENT_TIME": "Current date & time",
	"WX_CURRENT_TIME_TIP": "",
	"WX_GET": "get",
	"WX_GET_TIME_TIP": "",
	"WX_LINE": "line",
	"WX_PRINT_TIME": "Display time",
	"WX_PRINT_TIME_LINE_TIP": "",
	"WX_PRINT_TIME_POS_TIP": "",
	"WX_ALTITUDE": "altitude",
	"WX_PRESSURE": "pressure",
	"WX_TEMPERATURE": "temperature",
	"WX_GET_BMP": "get",
	"WX_GET_BMP_TIP": "",
	"WX_GET_MAG": "get MAG3110",
	"WX_GET_MAG_TIP": "",
	"WX_GET_MLX": "get Magnetometer",
	"WX_GET_MLX_TIP": "",
	"WX_FILTER": "filter",
	"WX_GET_MPU_ANGLE": "get IMU angle",
	"WX_GET_MPU_ANGLE_TIP": "",
	"WX_GET_MPU_ACCEL": "get IMU acceleration",
	"WX_GET_MPU_ACCEL_TIP": "",
	"WX_FREE_FALL_DETECTED": "detect free fall",
	"WX_FREE_FALL_DETECTED_TIP": "",
	"WX_THRESHOLD": "threshold",
	"WX_DURATION": "duration",
	"WX_DETECT_MOTION": "detect motion",
	"WX_DETECT_MOTION_TIP": "",
	"WX_BZR_PLAY_NOTE": "Play tone note",
	"WX_BZR_PLAY_NOTE_TIP": "",
	"WX_BEAT": "beat",
	"WX_PLAY_FREQ": "Play frequency",
	"WX_PLAY_FREQ_TIP": "",
	"WX_READ_BUTTON": "read button",
	"WX_READ_BUTTON_TIP": "",
	"WX_READ_GPAD": "read G-Pad button",
	"WX_READ_GPAD_TIP": "",
	"WX_GET_BATTERY_VOLTAGE": "get battery voltage (V)",
	"WX_GET_BATTERY_VOLTAGE_TIP": "",
	"WX_GET_BATTERY_PERCENT": "get battery voltage (%)",
	"WX_GET_BATTERY_PERCENT_TIP": "",
	"WX_CHARGE_COMPLETE": "detect charge complete",
	"WX_CHARGE_COMPLETE_TIP": "",
	"WX_CHECK_USB_CONNECTION": "check USB connection",
	"WX_CHECK_USB_CONNECTION_TIP": "",
	"WX_SLEEP_AND_WAKE_BUTTON": "sleep and wake on button",
	"WX_SLEEP_AND_WAKE_BUTTON_TIP": "",
	"WX_SLEEP_AND_WAKE_TIMER": "sleep and wake on time",
	"WX_SLEEP_AND_WAKE_TIMER_TIP": "",
	"WX_INTERVALS": "intervals",
	"WX_BLUETOOTH": "Bluetooth",
	"WX_ID": "id",
	"WX_INIT": "init",
	"WX_BLUETOOTH_INIT_TIP": "",
	"WX_BLUETOOTH_SEND": "Bluetooth send",
	"WX_BLUETOOTH_SEND_TIP": "",
	"WX_BLUETOOTH_RECV": "bluetooth receive text",
	"WX_BLUETOOTH_RECV_TIP": "",
	"WX_BLE_KEY_PRESS": "Bluetooth key press",
	"WX_BLE_KEY_PRESS_TIP": "",
	"WX_BLE_MEDIA_CONTROL": "Bluetooth media control",
	"WX_BLE_MEDIA_CONTROL_TIP": "",
	"WX_PLAY_PAUSE": "Play/Pause",
	"WX_NEXT": "Next",
	"WX_PREVIOUS": "Previous",
	"WX_VOLUME_UP": "Volume+",
	"WX_VOLUME_DOWN": "Volume-",
	"WX_LEFT": "Left",
	"WX_RIGHT": "Right",
	"WX_PRESSED": "Pressed",
	"WX_RELEASE": "Release",
	"WX_BLE_MOUSE_CONTROL": "Bluetooth mouse button",
	"WX_BLE_MOUSE_CONTROL_TIP": ""
}
