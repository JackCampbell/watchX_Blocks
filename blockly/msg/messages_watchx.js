'use strict';

goog.provide('Blockly.Msg.en');
goog.require('Blockly.Msg');

// watchx ...

Blockly.Msg.WX_TURN_LED = 'Turn LED';
Blockly.Msg.WX_TO = 'to';
Blockly.Msg.WX_TURN_LED_TIPS = 'Selected light on or off for the built-in LED of the watchX.';
Blockly.Msg.WX_LED_BRIGHTNESS = 'LED brightness';
Blockly.Msg.WX_LED_BRIGHTNESS_TIP = 'Selected light on or off with brightness control.';
Blockly.Msg.WX_LED_LEVEL = ' level ';
Blockly.Msg.WX_OLED_WRITE = 'Display write';
Blockly.Msg.WX_OLED_WRITE_LINE = 'line';
Blockly.Msg.WX_OLED_WRITE_ALIGN = 'align';
Blockly.Msg.WX_PX = 'X';
Blockly.Msg.WX_PY = 'Y';
Blockly.Msg.WX_OLED_WRITE_LINE_TIP = 'Displays the data on the watchX display, sets the line within range 1 - 8, aligns the text left, centered or right.  ';
Blockly.Msg.WX_OLED_WRITE_POS_TIP = 'Displays the data on the watchX display, X lateral position within range 0 - 127, Y vertical position within range 0 - 63.';
Blockly.Msg.WX_DRAW_PIXEL = 'Draw pixel';
Blockly.Msg.WX_DRAW_PIXEL_TIP = 'Draws a single pixel at the given X - Y position. X lateral position within range 0 - 127, Y vertical position within range 0 - 63.';
Blockly.Msg.WX_DRAW_LINE = 'Draw line';
Blockly.Msg.WX_DRAW_LINE_TIP = 'Draws a line. X1 and Y1 start point of the line, X2 and Y2 finis point of the line. X lateral position within range 0 - 127, Y vertical position within range 0 - 63.';
Blockly.Msg.WX_DRAW_BATTERY_LEVEL = 'Draw battery level';
Blockly.Msg.WX_DRAW_BATTERY_LEVEL_TIP = 'Draws a battery icon at the given X - Y position with percent indicates battery fullness. X lateral position within range 0 - 127, Y vertical position within range 0 - 63.';
Blockly.Msg.WX_PERCENT = 'percent';
Blockly.Msg.WX_OLED_BRIGHTNESS = 'Display brightness';
Blockly.Msg.WX_OLED_BRIGHTNESS_TIP = 'Sets the display brightness high or low. High setting is for better visibility, low setting is for low power consumption.';
Blockly.Msg.WX_DRAW_USB_ICON = 'Display USB icon';
Blockly.Msg.WX_DRAW_USB_ICON_TIP = 'Displays the USB icon at the given X - Y position. X lateral position within range 0 - 127, Y vertical position within range 0 - 63.';
Blockly.Msg.WX_DRAW_CHARGE_ICON = 'Display charge icon';
Blockly.Msg.WX_DRAW_CHARGE_ICON_TIP = 'Displays the charge icon at the given X - Y position. X lateral position within range 0 - 127, Y vertical position within range 0 - 63.';
Blockly.Msg.WX_OLED_CLEAR_ALL = 'Display clear display';
Blockly.Msg.WX_OLED_CLEAR_ALL_TIP = 'Clears any data on the display.';
Blockly.Msg.WX_OLED_POWER = 'Display power';
Blockly.Msg.WX_OLED_POWER_TIP = 'Turns the display on or off. High to turn on, low to turn off.';
Blockly.Msg.WX_SET_DATE = 'Set date';
Blockly.Msg.WX_DAY = 'day';
Blockly.Msg.WX_MONTH = 'month';
Blockly.Msg.WX_YEAR = 'year';
Blockly.Msg.WX_HOUR = 'hour';
Blockly.Msg.WX_MINUTE = 'minute';
Blockly.Msg.WX_SECOND = 'second';
Blockly.Msg.WX_SET_DATE_TIP = 'Sets the given date and time to the watchX time unit.';
Blockly.Msg.WX_CURRENT_TIME = 'Current date & time';
Blockly.Msg.WX_CURRENT_TIME_TIP = 'Sets the computers date and time to the watchX time unit. ';
Blockly.Msg.WX_GET = 'get';
Blockly.Msg.WX_GET_TIME_TIP = 'Gets the current date/time unit from the watchX time unit.';
Blockly.Msg.WX_LINE = 'line';
Blockly.Msg.WX_PRINT_TIME = 'Display time';
Blockly.Msg.WX_PRINT_TIME_LINE_TIP = 'Displays the hour, minute and second with a big font, sets the line within range 1 - 8.';
Blockly.Msg.WX_PRINT_TIME_POS_TIP = 'isplays the hour, minute and second with a big font at the given X - Y position. X lateral position within range 0 - 127, Y vertical position within range 0 - 63.';
Blockly.Msg.WX_ALTITUDE = 'altitude';
Blockly.Msg.WX_PRESSURE = 'pressure';
Blockly.Msg.WX_TEMPERATURE = 'temperature';
Blockly.Msg.WX_GET_BMP = 'get';
Blockly.Msg.WX_GET_BMP_TIP = 'Gets the selected altitude, pressure or temperature value from the built in BMP280 sensor. Altitude in meters, pressure in Pascal, temperature in celsius.';
Blockly.Msg.WX_GET_MAG = 'get MAG3110';
Blockly.Msg.WX_GET_MAG_TIP = 'Gets the magnetic field data from the built in MAG3110 sensor. Magnetic field in micro tesla(uT). This sensor replaced with MLX90393 sensor in watchX v1.3 and later.';
Blockly.Msg.WX_GET_MLX = 'get Magnetometer';
Blockly.Msg.WX_GET_MLX_TIP = 'Gets the magnetic field data from the built in MLX90393 sensor with filterin option for better sensebility. Magnetic field in micro tesla(uT).';
Blockly.Msg.WX_FILTER = 'filter';
Blockly.Msg.WX_GET_MPU_ANGLE = 'get IMU angle';
Blockly.Msg.WX_GET_MPU_ANGLE_TIP = 'Gets the angle between ground and watchX from the built in MPU6050 sensor. X is pitch angle and Y is roll angle.';
Blockly.Msg.WX_GET_MPU_ACCEL = 'get IMU acceleration';
Blockly.Msg.WX_GET_MPU_ACCEL_TIP = 'Gets the acceleration data from the built in MPU6050 sensor in meters per second square.';
Blockly.Msg.WX_FREE_FALL_DETECTED = 'detect free fall';
Blockly.Msg.WX_FREE_FALL_DETECTED_TIP = 'Detects free fall using the built in MPU6050 sensor. Adjusts the sensitivity using treshold and duration values.';
Blockly.Msg.WX_THRESHOLD = 'threshold';
Blockly.Msg.WX_DURATION = 'duration';
Blockly.Msg.WX_DETECT_MOTION = 'detect motion';
Blockly.Msg.WX_DETECT_MOTION_TIP = 'Detects motion using the built in MPU6050 sensor. Adjusts the sensitivity using treshold and duration values.';
Blockly.Msg.WX_BZR_PLAY_NOTE = 'Play tone note';
Blockly.Msg.WX_BZR_PLAY_NOTE_TIP = 'Plays the selected note on the built in buzzer. Beat sets the duration of the note.';
Blockly.Msg.WX_BEAT = 'beat';
Blockly.Msg.WX_PLAY_FREQ = 'Play frequency';
Blockly.Msg.WX_PLAY_FREQ_TIP = 'Sets tone on built in buzzer, frequency within range 31 - 65535';
Blockly.Msg.WX_READ_BUTTON = 'read button';
Blockly.Msg.WX_READ_BUTTON_TIP = 'Gets the status of the button weather it is pressed or not. Returns true if pressed.';
Blockly.Msg.WX_READ_GPAD = 'read G-Pad button';
Blockly.Msg.WX_READ_GPAD_TIP = 'Gets the status of the Game pad button weather it is pressed or not. Returns true if pressed.';
Blockly.Msg.WX_GET_BATTERY_VOLTAGE = 'get battery voltage (V)';
Blockly.Msg.WX_GET_BATTERY_VOLTAGE_TIP = 'Measures the battery voltage in Volts.';
Blockly.Msg.WX_GET_BATTERY_PERCENT = 'get battery voltage (%)';
Blockly.Msg.WX_GET_BATTERY_PERCENT_TIP = 'Measures the battery voltage and returns a value between 0 - 100.';
Blockly.Msg.WX_CHARGE_COMPLETE = 'detect charge complete';
Blockly.Msg.WX_CHARGE_COMPLETE_TIP = 'Checks the charge complete status of the watchX battery while charging. Returns true if the battery is fully charged.';
Blockly.Msg.WX_CHECK_USB_CONNECTION = 'check USB connection';
Blockly.Msg.WX_CHECK_USB_CONNECTION_TIP = 'Returns true if the watchX is connected to a USB source.';
Blockly.Msg.WX_SLEEP_AND_WAKE_BUTTON = 'sleep and wake on button';
Blockly.Msg.WX_SLEEP_AND_WAKE_BUTTON_TIP = 'Sleeps when the block executed, wakes up when stated button pressed.';
Blockly.Msg.WX_SLEEP_AND_WAKE_TIMER = 'sleep and wake on time';
Blockly.Msg.WX_SLEEP_AND_WAKE_TIMER_TIP = 'Sleeps and wakes on stated intervals.';
Blockly.Msg.WX_INTERVALS = 'intervals';
Blockly.Msg.WX_BLUETOOTH = 'Bluetooth';
Blockly.Msg.WX_ID = 'id';
Blockly.Msg.WX_INIT = 'init';
Blockly.Msg.WX_BLUETOOTH_INIT_TIP = 'Sets the bluetooth module in different mods. Id allows to give a unique Bluetooth device name.';
Blockly.Msg.WX_BLUETOOTH_SEND = 'Bluetooth send';
Blockly.Msg.WX_BLUETOOTH_SEND_TIP = 'Sends the given data over Bluetoth.';
Blockly.Msg.WX_BLUETOOTH_RECV = 'bluetooth receive text';
Blockly.Msg.WX_BLUETOOTH_RECV_TIP = 'Receives data from the connected Bluetooth device.';
Blockly.Msg.WX_BLE_KEY_PRESS = 'Bluetooth key press';
Blockly.Msg.WX_BLE_KEY_PRESS_TIP = 'Acts as a Bluetooth keyboard, sends a keyboard key stroke.';
Blockly.Msg.WX_BLE_MEDIA_CONTROL = 'Bluetooth media control';
Blockly.Msg.WX_BLE_MEDIA_CONTROL_TIP = 'Allows media control when connected to a PC or phone.';
Blockly.Msg.WX_PLAY_PAUSE = 'Play/Pause';
Blockly.Msg.WX_NEXT = 'Next';
Blockly.Msg.WX_PREVIOUS = 'Previous';
Blockly.Msg.WX_VOLUME_UP = 'Volume+';
Blockly.Msg.WX_VOLUME_DOWN = 'Volume-';
Blockly.Msg.WX_LEFT = 'Left';
Blockly.Msg.WX_RIGHT = 'Right';
Blockly.Msg.WX_PRESSED = 'Pressed';
Blockly.Msg.WX_RELEASE = 'Release';
Blockly.Msg.WX_BLE_MOUSE_CONTROL = 'Bluetooth mouse button';
Blockly.Msg.WX_BLE_MOUSE_CONTROL_TIP = 'Allows to send Bluetooth mouse click.';

